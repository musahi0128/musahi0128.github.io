[{"categories":null,"contents":"Background Have you ever stumble upon a situation where you need to configure Zabbix host to be monitored but they are not on the same network?\nSetting up a VPN network would be one of the most suggested approach. But let\u0026rsquo;s says it isn\u0026rsquo;t an option for you, or you don\u0026rsquo;t want to do it that way for any reason.\nOne way to solve this problem is to setup SSH connection between the server and the monitored hosts, and then forward the Zabbix agent port (10050 by default) of the monitored host to a port on the server. This would work if your Zabbix server is accessible by its public IP and able to expose its SSH port. Refer to this post on how to setup Zabbix server on a machine with ARM64/AArch64 processor and Ubuntu Noble operating system.\nSSH client are available on Linux, Mac OS, and even on the lates version of Windows by default, so this would be a cross-platform solution.\nWe will harden the SSH installation on the server, and setup a user with no ability other than what is required to allow the port forwarding to happens. Those steps are required to reduce cyber security attack surface.\nSetting up On the server Harden SSH service config For starter, you can add or adjust following lines on your /etc/ssh/sshd_config\nProtocol 2 # Use only the secure SSH protocol version 2. Port 12345 # Set a high, non-default port to reduce exposure. PermitRootLogin no # Disable root login for better security. PasswordAuthentication no # Enforce key-based authentication only. MaxAuthTries 3 # Limit to 3 failed login attempts per connection. MaxSessions 2 # Allow up to 2 sessions per connection. ClientAliveInterval 600 # Send keep-alive messages every 10 minutes of inactivity. ClientAliveCountMax 3 # Disconnect after 30 minutes of inactivity. Prevent brute-force attack with fail2ban #!/bin/bash sudo apt update sudo apt install -yq fail2ban cat \u0026lt;\u0026lt; \u0026#39;EOF\u0026#39; | sudo tee /etc/fail2ban/jail.local \u0026gt; /dev/null [sshd] enabled = true # Enables the SSH jail. port = 12345 # Sets the SSH port to 12345. Replace this with your actual SSH port. filter = sshd # Specifies the filter to use, typically defined in /etc/fail2ban/filter.d/sshd.conf. logpath = /var/log/auth.log # Specifies the log file to monitor for SSH login attempts. maxretry = 3 # Allows up to 3 failed login attempts before banning the IP. EOF sudo systemctl restart fail2ban Setup the service account #!/bin/bash # Set the service account username SERVICE_ACCOUNT=\u0026#34;zabbix_service_account\u0026#34; # Abort if the user already exists if id \u0026#34;$SERVICE_ACCOUNT\u0026#34; \u0026amp;\u0026gt;/dev/null; then echo \u0026#34;User $SERVICE_ACCOUNT already exists. Aborting.\u0026#34; exit 1 fi # Create the user and set its shell to /bin/false so it can\u0026#39;t have an interactive login session sudo adduser --disabled-password --gecos \u0026#34;\u0026#34; --shell /bin/false \u0026#34;$SERVICE_ACCOUNT\u0026#34; \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 # Remove the user from any other group membership sudo usermod -G \u0026#34;\u0026#34; \u0026#34;$SERVICE_ACCOUNT\u0026#34; # Prevent password-based login sudo passwd -l \u0026#34;$SERVICE_ACCOUNT\u0026#34; \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 # Generate private/public key pair for the user sudo -u \u0026#34;$SERVICE_ACCOUNT\u0026#34; bash -c \u0026#39; mkdir -p ~/.ssh ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N \u0026#34;\u0026#34; -q cp ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys chmod 700 ~/.ssh chmod 600 ~/.ssh/id_rsa ~/.ssh/authorized_keys chmod 644 ~/.ssh/id_rsa.pub \u0026#39; # Create a specific SSH server configuration for the user # Those ports with PermitOpen represent each of the monitored hosts cat \u0026lt;\u0026lt; EOF | sudo tee /etc/ssh/sshd_config.d/101-${SERVICE_ACCOUNT}.conf \u0026gt; /dev/null Match User ${SERVICE_ACCOUNT} AllowTcpForwarding yes X11Forwarding no PermitTunnel no PermitOpen 127.0.0.1:11051 PermitOpen 127.0.0.1:11052 PermitOpen 127.0.0.1:11053 # PermitOpen 127.0.0.1:11054 # PermitOpen 127.0.0.1:11055 # ... # Add more as needed, one line per monitored host EOF # Restart ssh service to apply the config sudo systemctl restart ssh.service # Print the private key; distribute this to the monitored hosts sudo -u \u0026#34;$SERVICE_ACCOUNT\u0026#34; bash -c \u0026#39;cat ~/.ssh/id_rsa\u0026#39; On the monitored host Assuming you have installed the agent on the monitored host with Ubuntu-based operating system, you can use following script. It will setup the service account and a systemd user service to keep the port forwarding alive. The script might also work with other Linux-based operating system having systemd installed.\nBefore running this script, create a new file on your home directory named id_rsa_${SERVICE_ACCOUNT} (would be id_rsa_zabbix_service_account from the example above) and put the printed content of the private key from previous script. Delete this file after completing the setup.\n#!/bin/bash # Variables SERVICE_ACCOUNT=\u0026#34;zabbix_service_account\u0026#34; # User account for SSH tunnel SERVER_ADDRESS=\u0026#34;179.155.104.113\u0026#34; # Server\u0026#39;s public IP SERVER_PORT=\u0026#34;12345\u0026#34; # Server\u0026#39;s SSH port REMOTE_PORT=\u0026#34;11051\u0026#34; # Remote port to forward to PRIVATE_KEY_PATH=\u0026#34;$HOME/id_rsa_$SERVICE_ACCOUNT\u0026#34; # Path to private key # Abort if user already exists if id \u0026#34;$SERVICE_ACCOUNT\u0026#34; \u0026amp;\u0026gt;/dev/null; then echo \u0026#34;User $SERVICE_ACCOUNT already exists. Aborting.\u0026#34; exit 1 fi # Create user sudo adduser --disabled-password --gecos \u0026#34;\u0026#34; --shell /usr/sbin/nologin \u0026#34;$SERVICE_ACCOUNT\u0026#34; \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 # Remove all group memberships sudo usermod -G \u0026#34;\u0026#34; \u0026#34;$SERVICE_ACCOUNT\u0026#34; # Lock password sudo passwd -l \u0026#34;$SERVICE_ACCOUNT\u0026#34; \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 # Enable lingering for the user sudo loginctl enable-linger \u0026#34;$SERVICE_ACCOUNT\u0026#34; # Prepare SSH keys sudo -u \u0026#34;$SERVICE_ACCOUNT\u0026#34; bash -c \u0026#39; mkdir -p ~/.ssh chmod 700 ~/.ssh \u0026#39; if [[ -f \u0026#34;$PRIVATE_KEY_PATH\u0026#34; ]]; then sudo cp \u0026#34;$PRIVATE_KEY_PATH\u0026#34; \u0026#34;/home/$SERVICE_ACCOUNT/.ssh/id_rsa_$SERVICE_ACCOUNT\u0026#34; sudo chown \u0026#34;$SERVICE_ACCOUNT:$SERVICE_ACCOUNT\u0026#34; \u0026#34;/home/$SERVICE_ACCOUNT/.ssh/id_rsa_$SERVICE_ACCOUNT\u0026#34; sudo chmod 600 \u0026#34;/home/$SERVICE_ACCOUNT/.ssh/id_rsa_$SERVICE_ACCOUNT\u0026#34; else echo \u0026#34;Private key not found at $PRIVATE_KEY_PATH. Exiting.\u0026#34; exit 1 fi # Configure systemd user service sudo -u \u0026#34;$SERVICE_ACCOUNT\u0026#34; bash -c \u0026#39;mkdir -p ~/.config/systemd/user\u0026#39; cat \u0026lt;\u0026lt; EOF | sudo tee \u0026#34;/home/$SERVICE_ACCOUNT/.config/systemd/user/$SERVICE_ACCOUNT.service\u0026#34; \u0026gt; /dev/null [Unit] Description=SSH Reverse Tunnel for $SERVICE_ACCOUNT After=network-online.target [Service] Type=simple ExecStart=/bin/ssh -i /home/$SERVICE_ACCOUNT/.ssh/id_rsa_$SERVICE_ACCOUNT -v -N \\ -R $REMOTE_PORT:127.0.0.1:10050 -p $SERVER_PORT $SERVICE_ACCOUNT@$SERVER_ADDRESS Restart=on-failure [Install] WantedBy=default.target EOF # Set ownership and permissions sudo chown -R \u0026#34;$SERVICE_ACCOUNT:$SERVICE_ACCOUNT\u0026#34; \u0026#34;/home/$SERVICE_ACCOUNT/.config/systemd/user\u0026#34; sudo chmod 644 \u0026#34;/home/$SERVICE_ACCOUNT/.config/systemd/user/$SERVICE_ACCOUNT.service\u0026#34; # Enable and start the service sudo -u \u0026#34;$SERVICE_ACCOUNT\u0026#34; bash -c \u0026#39; # Initiate one time connection to the server so the service can start ssh -i ~/.ssh/id_rsa_\u0026#39;$SERVICE_ACCOUNT\u0026#39; -p \u0026#39;$SERVER_PORT\u0026#39; -o StrictHostKeyChecking=no \\ \u0026#39;$SERVICE_ACCOUNT\u0026#39;@\u0026#39;$SERVER_ADDRESS\u0026#39; true \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 export XDG_RUNTIME_DIR=/run/user/$(id -u \u0026#39;$SERVICE_ACCOUNT\u0026#39;) systemctl --user daemon-reload systemctl --user enable --now \u0026#39;$SERVICE_ACCOUNT\u0026#39;.service \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 systemctl --user status \u0026#39;$SERVICE_ACCOUNT\u0026#39;.service \u0026#39; The output should look like this: If the Active part says active (running), then you are good to go.\nOn the frontend Click on Monitoring â†’ Hosts on the sidebar. Click on Create host button on right-top part of the page. On the Host tab, fill in the Host name according to the hostname of the monitored host. Click on Select button for Host groups. Check one or more appropriate host group then click on Select button. Under Interface section, click on Add then click on Agent. Be sure to keep the IP address as is (127.0.0.1). Change the Port according to your setup. Following the example above it should be 11051. Click on Add button at the bottom part of the form. A new entry should appear on your list. After around 10-15 seconds, the Availability value should change to Available (marked with ZBX green icon). This is the sign that the setup is working as expected.\n","date":"December 13, 2024","hero":"/images/posts/zabbix-hero.png","permalink":"http://localhost:1313/posts/monitoring/zabbix-host-ssh/","summary":"\u003ch2 id=\"background\"\u003eBackground\u003c/h2\u003e\n\u003cp\u003eHave you ever stumble upon a situation where you need to configure Zabbix host to be monitored but they are not on the same network?\u003c/p\u003e\n\u003cp\u003eSetting up a VPN network would be one of the most suggested approach. But let\u0026rsquo;s says it isn\u0026rsquo;t an option for you, or you don\u0026rsquo;t want to do it that way for any reason.\u003c/p\u003e\n\u003cp\u003eOne way to solve this problem is to setup SSH connection between the server and the monitored hosts, and then forward the Zabbix agent port (10050 by default) of the monitored host to a port on the server. This would work if your Zabbix server is accessible by its public IP and able to expose its SSH port. Refer to \u003ca href=\"/posts/solution/monitoring/zabbix-setup-script-noble-arm64/\"\u003ethis post\u003c/a\u003e on how to setup Zabbix server on a machine with ARM64/AArch64 processor and Ubuntu Noble operating system.\u003c/p\u003e","tags":null,"title":"Zabbix: monitor host over SSH"},{"categories":null,"contents":"From Wikipedia:\nZabbix is an open-source software tool to monitor IT infrastructure such as networks, servers, virtual machines, and cloud services.\nThis script automate the installation of Zabbix Server, Frontend and Agent along with its dependencies. The script was tested on an LXD container using the Ubuntu 24.04.1 image, running in a VM with the VM.Standard.A1.Flex shape on an Oracle Cloud Infrastructure compute instance. I believe it should work on any machine having the same OS and processor.\nThe script How to run Directly from GitHub Gist curl -s https://gist.githubusercontent.com/musahi0128/7252c38afd9dbb0d29e103d05eba263b/raw | sudo bash Manually Copy the script Create a new file via nano nano zabbix-setup-arm64.sh Paste the script Save (Ctrl+S) and exit nano (Ctrl+X) Make the file executable chmod a+x zabbix-setup-arm64.sh Execute the file with sudo sudo ./zabbix-setup-arm64.sh Preview Continue with Zabbix setup Once the installation completed, open the Zabbix frontend and proceed with the setup from there. Secure your installation Option 1: Change Admin password Sign in as the Admin user. On the left sidebar, click on User settings â†’ Profile Under User tab you can click on Change password. Option 2: Setup a new Super admin user and disable Admin user Setup a new Super admin user Sign in as the Admin user. On the left sidebar, click on Users â†’ Users. On the right-top part of the page, click on Create user. Fill in all the necessary information on the User tab. Change to Permissions tab then click on Select button for the Role. Click on Super admin role. At the bottom part of the page, click on Add. Disable Admin user Sign out from Admin user then sign in as the newly created user. On the left sidebar, click on Users â†’ Users. Click on Admin user. On the User tab, click on Select button for the Groups. Check the Disabled group then click on Select button. At the bottom part of the page, click on Update. ","date":"December 11, 2024","hero":"/images/posts/zabbix-hero.png","permalink":"http://localhost:1313/posts/monitoring/zabbix-setup-script-noble-arm64/","summary":"\u003cp\u003eFrom \u003ca href=\"https://en.wikipedia.org/wiki/Zabbix\" target=\"_blank\" rel=\"noopener\"\u003eWikipedia\u003c/a\u003e:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eZabbix is an open-source software tool to monitor IT infrastructure such as networks, servers, virtual machines, and cloud services.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis script automate the installation of Zabbix Server, Frontend and Agent along with its dependencies. The script was tested on an LXD container using the Ubuntu 24.04.1 image, running in a VM with the \u003ccode\u003eVM.Standard.A1.Flex\u003c/code\u003e shape on an Oracle Cloud Infrastructure compute instance. I believe it should work on any machine having the same OS and processor.\u003c/p\u003e","tags":null,"title":"Zabbix setup script for Ubuntu Noble ARM64/AArch64"},{"categories":null,"contents":"Sorry for the tiger eye staring at you. I find it funny so I choose to keep it that way ðŸ¤£\nWindows Subsystem for Linux (WSL) lets developers run a GNU/Linux environment \u0026ndash; including most command-line tools, utilities, and applications \u0026ndash; directly on Windows, unmodified, without the overhead of a traditional virtual machine or dual-boot setup.1\nIn my opinion, WSL is just a pre-configured Hyper-V VM or maybe a container which integrate well with Windows.\nIt integrates the command-line to the Terminal app Allows you to access the files inside by a network path (\\\\wsl.localhost\\\u0026lt;distro name\u0026gt;) using File Explorer Port opened within are accessible from localhost You can run GUI app out of the box For the last part, while it\u0026rsquo;s nice to have that, it is somehow prevent you from running tigervnc-standalone-server normally.\nProblem Sample output of running vncserver :1 command:\nKilling Xtigervnc process ID 13510... success! =================== tail /home/ubuntu/.vnc/MSI-2.:1.log =================== _XSERVTransmkdir: Mode of /tmp/.X11-unix should be set to 1777 _XSERVTransSocketCreateListener: failed to bind listener _XSERVTransSocketUNIXCreateListener: ...SocketCreateListener() failed _XSERVTransMakeAllCOTSServerListeners: failed to create listener for unix Xvnc TigerVNC 1.13.1 - built 2024-04-01 08:26 Copyright (C) 1999-2022 TigerVNC Team and many others (see README.rst) See https://www.tigervnc.org for information on TigerVNC. Underlying X server release 12101011 Tue Dec 10 23:49:55 2024 vncext: VNC extension running! vncext: Listening for VNC connections on local interface(s), port 5901 vncext: created VNC server for screen 0 The XKEYBOARD keymap compiler (xkbcomp) reports: \u0026gt; Warning: Could not resolve keysym XF86CameraAccessEnable \u0026gt; Warning: Could not resolve keysym XF86CameraAccessDisable \u0026gt; Warning: Could not resolve keysym XF86CameraAccessToggle \u0026gt; Warning: Could not resolve keysym XF86NextElement \u0026gt; Warning: Could not resolve keysym XF86PreviousElement \u0026gt; Warning: Could not resolve keysym XF86AutopilotEngageToggle \u0026gt; Warning: Could not resolve keysym XF86MarkWaypoint \u0026gt; Warning: Could not resolve keysym XF86Sos \u0026gt; Warning: Could not resolve keysym XF86NavChart \u0026gt; Warning: Could not resolve keysym XF86FishingChart \u0026gt; Warning: Could not resolve keysym XF86SingleRangeRadar \u0026gt; Warning: Could not resolve keysym XF86DualRangeRadar \u0026gt; Warning: Could not resolve keysym XF86RadarOverlay \u0026gt; Warning: Could not resolve keysym XF86TraditionalSonar \u0026gt; Warning: Could not resolve keysym XF86ClearvuSonar \u0026gt; Warning: Could not resolve keysym XF86SidevuSonar \u0026gt; Warning: Could not resolve keysym XF86NavInfo Errors from xkbcomp are not fatal to the X server [mi] mieq: warning: overriding existing handler (nil) with 0x55b1c7bdd580 for event 2 [mi] mieq: warning: overriding existing handler (nil) with 0x55b1c7bdd580 for event 3 Tue Dec 10 23:50:27 2024 ComparingUpdateTracker: 0 pixels in / 0 pixels out ComparingUpdateTracker: (1:-nan ratio) =========================================================================== vncserver: /usr/bin/Xtigervnc did not start up, please look into \u0026#39;/home/ubuntu/.vnc/MSI-2.:1.log\u0026#39; to determine the reason! -1 The content of /home/ubuntu/.vnc/MSI-2.:1.log is exactly the same with the above outputs. Checking with ChatGPT2, this happens because /tmp/.X11-unix exists and being used by WSLg3, which is what enables you to run GUI apps. It mentioned to temporary disable WSLg, but I am unable to.\n$ sudo mv /tmp/.X11-unix /tmp/.X11-unix.bak mv: cannot move \u0026#39;/tmp/.X11-unix\u0026#39; to \u0026#39;/tmp/.X11-unix.bak\u0026#39;: Device or resource busy I don\u0026rsquo;t want to permanently disable WSLg either.\nDiving in Running vncserver -verbose, I found that it calls /usr/bin/Xtigervnc.\n$ vncserver -verbose Starting /usr/bin/Xtigervnc :1 -localhost=1 -desktop MSI-2.:1 (ubuntu) -rfbport 5901 -PasswordFile /tmp/tigervnc.MIwj6R/passwd -SecurityTypes VncAuth -auth /home/ubuntu/.Xauthority -geometry 1920x1200 -depth 24 Interestingly, if I call Xtigervnc with the same parameters, the server stays and I can connect to it, although it only shows a black screen.\nWorkaround Knowing that the server part can be started just fine, I came up with this bash script to start the VNC server and an xfce4 session.\n#/bin/bash export DISPLAY=:1 screen -dmS Xtigervnc /usr/bin/Xtigervnc :1 -localhost -SecurityTypes None -geometry 1600x900 screen -S xfce4 dbus-launch --exit-with-session xfce4-session screen -XS Xtigervnc quit The script:\nSet $DISPLAY to :1 Start a screen session to contains the Xtigervnc process and outputs, effectively running it in the background without messing up your terminal and hold it hostage. Start another screen session, launch a dbus session with xfce4-session to run the desktop environment When you log out from the desktop, the screen session from the previous step will cleanly exit Gracefully quit the screen session from the first step The server started with -localhost -SecurityTypes None which allow only connection from localhost and bypass the password requirement. This shouldn\u0026rsquo;t be a security concern since only you can access the server. When I open my VNC client and access localhost:5901, I have the full xfce4 desktop running perfectly fine.\nBy not disabling WSLg, sounds are also working on this setup. VNC indeed didn\u0026rsquo;t transfer sounds, but having WSLg and the pulseaudio server within it running and untouched, sounds are redirected there and will come out on your audio output.\nWindows Subsystem for Linux Documentation | Microsoft Learn\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nChatGPT session 675879a8\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nWSLg Architecture Overview\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"December 10, 2024","hero":"/images/posts/tigervnc.svg","permalink":"http://localhost:1313/posts/os/ubuntu/vncserver_wsl2/","summary":"\u003cp\u003e\u003cem\u003eSorry for the tiger eye staring at you. I find it funny so I choose to keep it that way\u003c/em\u003e ðŸ¤£\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWindows Subsystem for Linux (WSL) lets developers run a GNU/Linux environment \u0026ndash; including most command-line tools, utilities, and applications \u0026ndash; directly on Windows, unmodified, without the overhead of a traditional virtual machine or dual-boot setup.\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIn my opinion, WSL is just a pre-configured Hyper-V VM or maybe a container which integrate well with Windows.\u003c/p\u003e","tags":null,"title":"VNC on WSL2"},{"categories":null,"contents":"Sorry for the tiger eye staring at you. I find it funny so I choose to keep it that way ðŸ¤£\nHeadless VM or container didn\u0026rsquo;t have any display device attached, so when you want to run a graphical application or a desktop environment, you will have to setup a virtual display. One way to do it is running a VNC server.\nVNC stands for Virtual Network Computing, a graphical desktop-sharing system that uses the Remote Frame Buffer protocol (RFB) to remotely control another computer. It transmits the keyboard and mouse input from one computer to another, relaying the graphical-screen updates, over a network. Read more here.\nI will demonstrate how to setup a VNC server using tigervnc package. This is tested on fresh install of Ubuntu 24.04.1 LTS running on LXD container.\nSetting up # Update list of available packages sudo apt update # Install required packages sudo apt install tigervnc-standalone-server tigervnc-xorg-extension Once the packages installed, you need to set a password for the vncserver by running vncpasswd command on your terminal.\n$ vncpasswd Password: Verify: Would you like to enter a view-only password (y/n)? When you type in the password, it will show nothing, so proceed with caution. If you want to share the screen later with somebody else and let them only view the display, you can say y when offered to put in the view-only password.\ntigervnc password can only hold 8 characters. You can type in as many characters as you like and it will not warn you, but then it will be truncated to the first 8 characters.\nAfter the password is set, you can then run vncserver -localhost=0. By default it will run in the background, set the server for display :1 and accept only connection from localhost. The -localhost=0 switch make sure it also accept connection coming from outside of localhost. Otherwise, you will only able to connect to it while having SSH session, do a port mapping to the vnc server port and connect to the mapped port on your own host.\nNext, you can run a graphical application or desktop environment by adding DISPLAY=:1 before the command.\nFor example, to run xeyes (part of x11-apps package), you can type DISPLAY=:1 xeyes on your terminal.\nAnother way to run application on the vnc server is to include it in the vncserver command. The above example can be run using this command when starting up the vnc server: vncserver -localhost=0 -- xeyes.\nAccess Access the virtual display using a vnc client.\nTightVNC Viewer, available as part of TightVNC server installation on Windows Remmina on Linux Apple Remote Desktop or RealVNC on Mac OS. I don\u0026rsquo;t have Mac so this is not tested. The vnc client will ask you for the address of the server. You should be able to find it using ip addr command.\n$ ip addr 1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet 10.255.255.254/32 brd 10.255.255.254 scope global lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: eth0: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1492 qdisc mq state UP group default qlen 1000 link/ether 00:15:5d:46:04:ca brd ff:ff:ff:ff:ff:ff inet 172.25.155.116/20 brd 172.25.159.255 scope global eth0 valid_lft forever preferred_lft forever inet6 fe80::215:5dff:fe46:4ca/64 scope link valid_lft forever preferred_lft forever On the output above, the address of the server is 172.25.155.116. You can put 172.25.155.116:5901 on the address input of the vnc client apps.\n","date":"December 9, 2024","hero":"/images/posts/tigervnc.svg","permalink":"http://localhost:1313/posts/os/ubuntu/vncserver_headless/","summary":"\u003cp\u003e\u003cem\u003eSorry for the tiger eye staring at you. I find it funny so I choose to keep it that way\u003c/em\u003e ðŸ¤£\u003c/p\u003e\n\u003cp\u003eHeadless VM or container didn\u0026rsquo;t have any display device attached, so when you want to run a graphical application or a desktop environment, you will have to setup a virtual display. One way to do it is running a VNC server.\u003c/p\u003e\n\u003cp\u003eVNC stands for \u003cstrong\u003eV\u003c/strong\u003eirtual \u003cstrong\u003eN\u003c/strong\u003eetwork \u003cstrong\u003eC\u003c/strong\u003eomputing,  a graphical desktop-sharing system that uses the Remote Frame Buffer protocol (RFB) to remotely control another computer. It transmits the keyboard and mouse input from one computer to another, relaying the graphical-screen updates, over a network. Read more \u003ca href=\"https://en.wikipedia.org/wiki/VNC\" title=\"Virtual Network Computing\" target=\"_blank\" rel=\"noopener\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","tags":null,"title":"VNC on headless VM or container"},{"categories":null,"contents":"I love tinkering with desktop environment in Ubuntu. I installed LXD on my Oracle Cloud Infrastructure A1 instance just to play around with all the available desktop environment. But none of them beat the combination of xfce4, Papirus icon theme and Dracula theme. It is lightweight and pleasant to look at.\nSetting up Wanna steal the look? here\u0026rsquo;s how to configure it on a freshly installed Ubuntu 24.04.1 LTS.\n# Update list of available packages sudo apt update # Install required packages sudo apt install xfce4 xfce4-goodies xfce4-terminal papirus-icon-theme # Download and setup latest version of Dracula GTK theme mkdir ~/.themes \\ \u0026amp;\u0026amp; cd ~/.themes \\ \u0026amp;\u0026amp; wget --content-disposition \u0026#34;https://github.com/dracula/gtk/archive/master.zip\u0026#34; \\ \u0026amp;\u0026amp; unzip gtk-master.zip \\ \u0026amp;\u0026amp; mv gtk-master Dracula \\ \u0026amp;\u0026amp; rm gtk-master.zip \\ \u0026amp;\u0026amp; cd ~ Customize Once all of the package are installed, you can continue with customizing the look and feel.\nStart your desktop If you are running a physical machine, reboot it. Once it back, you should be presented with login screen provided by LightDM. Proceed to login and carry on with the next steps. If you are running a headless VM or container, you will have to setup VNC server to display the desktop. You can refer to this post on how to set it up. Click on Application \u0026gt; Settings \u0026gt; Appearance On the Style tab, select the Dracula theme and make sure to turn on Set matching Xfwm4 theme if there is one On Icons tab, choose one of the Papirus icon theme. The preview image above uses Papirus Colors Dark And that\u0026rsquo;s it! enjoy your lovely desktop.\n","date":"December 8, 2024","hero":"/images/posts/tvnviewer_I1l5tQfGOa.png","permalink":"http://localhost:1313/posts/os/ubuntu/xfce4-papirus-dracula/","summary":"\u003cp\u003eI love tinkering with desktop environment in Ubuntu. I installed LXD on my Oracle Cloud Infrastructure A1 instance just to play around with all the available desktop environment. But none of them beat the combination of xfce4, Papirus icon theme and Dracula theme. It is lightweight and pleasant to look at.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/posts/tvnviewer_I1l5tQfGOa.png\" alt=\"Preview\" title=\"preview\"\u003e\u003c/p\u003e\n\u003ch2 id=\"setting-up\"\u003eSetting up\u003c/h2\u003e\n\u003cp\u003eWanna steal the look? here\u0026rsquo;s how to configure it on a freshly installed Ubuntu 24.04.1 LTS.\u003c/p\u003e","tags":null,"title":"Xfce4 + Papirus icon + Dracula theme = ðŸ–¤"}]